[{"F:\\GitPontte\\desafioPontte\\src\\components\\MainCard\\MainCard.js":"1","F:\\GitPontte\\desafioPontte\\src\\store\\index.js":"2","F:\\GitPontte\\desafioPontte\\src\\Helpers\\formatBRL.js":"3","F:\\GitPontte\\desafioPontte\\src\\Services\\LoadData.js":"4","F:\\GitPontte\\desafioPontte\\src\\App.js":"5","F:\\GitPontte\\desafioPontte\\src\\components\\CardTitle\\CardTitle.js":"6","F:\\GitPontte\\desafioPontte\\src\\components\\CardMonths\\CardMonths.js":"7","F:\\GitPontte\\desafioPontte\\src\\components\\Slider\\Slider.js":"8","F:\\GitPontte\\desafioPontte\\src\\components\\Buttons\\ContinueBtt.js":"9","F:\\GitPontte\\desafioPontte\\src\\components\\Unavailable\\Unavailable.js":"10"},{"size":2993,"mtime":1606698637757,"results":"11","hashOfConfig":"12"},{"size":875,"mtime":1606698956143,"results":"13","hashOfConfig":"12"},{"size":335,"mtime":1606622155632,"results":"14","hashOfConfig":"12"},{"size":453,"mtime":1606698877382,"results":"15","hashOfConfig":"12"},{"size":1035,"mtime":1606699009558,"results":"16","hashOfConfig":"12"},{"size":280,"mtime":1606621206153,"results":"17","hashOfConfig":"12"},{"size":797,"mtime":1606698707285,"results":"18","hashOfConfig":"12"},{"size":2076,"mtime":1606620117400,"results":"19","hashOfConfig":"12"},{"size":786,"mtime":1606698695583,"results":"20","hashOfConfig":"12"},{"size":309,"mtime":1606620637015,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p5w30y",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\GitPontte\\desafioPontte\\src\\components\\MainCard\\MainCard.js",[],"F:\\GitPontte\\desafioPontte\\src\\store\\index.js",[],"F:\\GitPontte\\desafioPontte\\src\\Helpers\\formatBRL.js",["43","44"],"F:\\GitPontte\\desafioPontte\\src\\Services\\LoadData.js",["45"],"F:\\GitPontte\\desafioPontte\\src\\App.js",[],"F:\\GitPontte\\desafioPontte\\src\\components\\CardTitle\\CardTitle.js",[],["46","47"],"F:\\GitPontte\\desafioPontte\\src\\components\\CardMonths\\CardMonths.js",["48"],"F:\\GitPontte\\desafioPontte\\src\\components\\Slider\\Slider.js",[],"F:\\GitPontte\\desafioPontte\\src\\components\\Buttons\\ContinueBtt.js",[],"F:\\GitPontte\\desafioPontte\\src\\components\\Unavailable\\Unavailable.js",[],{"ruleId":"49","severity":1,"message":"50","line":8,"column":35,"nodeType":"51","messageId":"52","endLine":8,"endColumn":36},{"ruleId":"49","severity":1,"message":"50","line":8,"column":41,"nodeType":"51","messageId":"52","endLine":8,"endColumn":42},{"ruleId":"53","severity":1,"message":"54","line":8,"column":15,"nodeType":"55","endLine":13,"endColumn":6},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":8,"column":10,"nodeType":"62","messageId":"63","endLine":8,"endColumn":22},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'optionSelect' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]